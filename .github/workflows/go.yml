name: Go Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [created]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Cache Go Modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build
      run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o output/myapp-${{ matrix.goos }}-${{ matrix.goarch }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: myapp-${{ matrix.goos }}-${{ matrix.goarch }}
        path: output/myapp-${{ matrix.goos }}-${{ matrix.goarch }}

  build-release:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Cache Go Modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build
      run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o output/myapp-${{ matrix.goos }}-${{ matrix.goarch }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: myapp-${{ matrix.goos }}-${{ matrix.goarch }}
        path: output/myapp-${{ matrix.goos }}-${{ matrix.goarch }}
